#summary Getting started with jZebra as a Web Applet component
#labels Featured,Phase-Deploy,Phase-Support

= Introduction =

jZebra offers 3 modes of printing:
|| [http://img413.imageshack.us/img413/4710/firefox2ie7nn0.gif] || *> Web Applet* ||
|| [http://img413.imageshack.us/img413/9843/toggledesktopes0.png] ||  [TutorialDesktopApplication Desktop Application] ||
|| [http://img413.imageshack.us/img413/6632/terminal1mq3.png] || [TutorialConsoleApplication Console Application] ||

This is a step-by-step tutorial that walks a web developer through creating a *Web Applet* capable of sending raw EPL/ZPL commands directly to a printer. This is the most common use of jZebra due to the growing demand for a web page that can perform thermal/bar-code or magnetic-stip printing.  The jZebra project is working with the *ups-php* project, a web developer from *ReasonTransport* and also a web developer from *FedEx* to focus its usage on packaging and shipping usage.

This tutorial walks through creating a basic html web applet that will send raw commands directly to your printer. Once the applet has been created, you will most likely use php, perl, asp or any web language to dynamically create the applet/object tags.  At this stage of development, only html samples are available.  If you are already familiar with java web applets and would like to skip this tutorial, simply download and extract the latest version and examine the applet code inside the provide sample html.  If you find this product useful and can offer sample php, perl, asp, etc, please email your example to a project member on the home page by adding "@gmail.com" to the member name. :)

http://img443.imageshack.us/img443/1985/jzebrabrowser1br0.png
----
= Installing Java =

Java 5 Runtime or higher is required on the clients to use jZebra as a web applet.  Click [http://img132.imageshack.us/img132/3416/cup1ad7.png]TutorialJavaInstall for help installing Java on your platform.

----
= Creating a Basic Web Applet =

Now download the latest [http://img104.imageshack.us/img104/9696/packagept0.png]`jZebra_x.x.x.zip` from [http://img242.imageshack.us/img242/5678/diskmultiplebx6.png][http://code.google.com/p/jzebra/downloads/list downloads] and extract the contents to your desktop.  
   * Make sure to extract the entire contents at once so that the folder and file structure stays in tact.
   * Locate the html sample file and open it with a text editor.  Windows users can use *[http://img174.imageshack.us/img174/2286/notepadle4.gif]notepad*.  Linux users can use *[http://img174.imageshack.us/img174/6650/accessoriestexteditor16ol7.png]gedit* (Ubuntu calls this "*[http://img174.imageshack.us/img174/6650/accessoriestexteditor16ol7.png]Text Editor*").  This should be called "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`".  Look over the applet code quickly to get comfortable with the parameters.
   * Close out "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`" and use the same text editor to make a new file.  Start by inserting the code to create the applet.
{{{
<html><body>
   <applet code="jzebra.JZebraApplet.class" archive="./jzebra.jar" width="200" height="25">
      <param name="buttontext" value="Sample button">
   </applet>
</html></body>
}}}
  * Save the file in the same folder as [http://img104.imageshack.us/img104/9696/packagept0.png]`jzebra.jar` and open the file with the browser of your choice.

|| <h3>Important</h3>IE7 may be prompt to "[http://www.mix-fx.com/flash-prompt.htm Click to Activate This Control]" each time the applet loads.  Work-arounds exist, but for the purpose of this tutorial Firefox or IE6 is recommended.<br><br>If you do not have a printer named "zebra", then you will have a "*SEVERE: Printer not found*" in your log.  To fix this, create a dummy printer with "zebra" in the name as a place holder for the purpose of learning this applet.  "zebra fake" as a printer name works for now.  Windows and Linux both allow this.<br><br>The raw commands provided are not intended for use with your printer, they're provided as an example.  You will be changing these commands for your printer in the steps following. ||

  *  The applet will begin to load in the web page.
[http://img132.imageshack.us/img132/3484/javaloadingca2.png]
  *  Next, Java security dialog prompt is shown.  This is Java's way of warning that the Web Applet has access to local resources.  jZebra needs local access to the workstation's printers, so click OK.
[http://img132.imageshack.us/img132/6508/jzebrasecuritydialogip3.png]
  *  Click the "Sample button".  It will most likely do nothing, this is normal.  What is important is that the output is checked in the Java console. Windows users can enable this by right clicking the Java system tray icon and clicking "[http://img74.imageshack.us/img74/2423/jzebrajava1tx5.png Open Java Console]".  Linux users, email the author if you've found a way to display a similar console.
  * If you already have a Zebra printer attached to your station, the applet will try to automatically use it by searching for the name "zebra" in all of your attached printers and will select the first match. Look for "INFO:  Printer found...". (This can later be changed using TutorialStaticParameters)
[http://img518.imageshack.us/img518/4696/jzebraprinterfoundfb0.png]
  * Look in the Java console log for something like follows.  You should see the default raw commands that jZebra ships with.
[http://img443.imageshack.us/img443/2775/jzebrajava2gh7.png]

----
= Sending raw commands to your printer =
jZebra takes a number of [TutorialStaticParameters static parameters] in order to load the right settings for yoru printer.  Assuming your printer is attached and set up as a "Generic/Text Only" printer _(don't use the vendor supplied driver, use plain text mode instead)_ we're now ready to print some raw commands.  To get something to print, three parameters need to be added to the web applet.  *`CONFIGTYPE`*, *`CONFIGPATH`*, *`LINEFEED`*.  For an exhaustive list, see TutorialStaticParameters.
  * *`CONFIGTYPE`*:  Set this to "*FILE*" with the following parameter: _(this can later be changed to a web url using "url")_
{{{
      <param name="configtype" value="file">
}}}
  * *`CONFIGPATH`*:  Set this to a location on your hard drive.  Windows users should use a location that's simple for now, such as the root of C:\.  Linux users should place this in the user's home directory.
{{{
      <param name="configpath" value="c:\test.txt">
}}}
  * Create the config file with notepad (or equivalent), and add some raw commands of your choice.  Follow your EPL/ZPL/ZPLII (or printer language) guide and keep it simple for now.
  * *`LINEFEED`*:  In order for your printer to separate the raw commands, you must send a linefeed that corresponds with your printer language.

_*Note:*  Newline is "\n", Carriage Return is "\r".  Your printer may need any combination of these or other characters.  If unsure, visit your printer programming manual. If other escape sequences are needed, search for the java equivalent online and replace._
{{{
       <param name="linefeed" value="\n">
}}}

  * If done correctly, you should now have your web applet printing.  If the raw print files are supplied by another program, you are finished.  If you'd like to generate some of the print commands dynamically (for example, with php) the next step is substitution of print commands using the wildcard "$" in your config.  Read below for more information.

----
= Command Substitution =
  * To perform substitution of print commands, simply place a "*$*" dollar sign infront of a variable in your config file.  These substitutions were illustrated in our sample above.

http://img443.imageshack.us/img443/3849/jzebracommandreplaceji3.png
  * Name your variables as you wish so as long as they match your applet code as follows:
{{{
      <param name="FIRSTNAME" value="TRES">
}}}

_This will replace all occurrences of *`$FIRSTNAME`* with the applet value specified *`TRES`*.  Your output should now reflect the following.  Notice `$FIRSTNAME` has changed, but `$LASTNAME` is left verbatim.

http://img443.imageshack.us/img443/6216/jzebracommandreplace2jz6.png

----

= Conclusion =

This illustrates the basic functionality of jZebra in applet mode.  To explore advanced features, revisit the source code of "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`", see a full list of available commands here: TutorialStaticParameters, or additionally you may email questions or suggestions to the author.